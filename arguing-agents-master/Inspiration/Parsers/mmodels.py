#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 28 12:56:49 2018

@author: sandy
"""

import hddm
import matplotlib.pyplot as plt
data = hddm.load_csv("~/Downloads/subj1_DMA.csv")
# first make a really simple model in which no parameters vary with conditions
m = hddm.HDDM(data)
# find a good starting point which helps with the convergence.
m.find_starting_values()
# start drawing 2000 samples and discarding 20 as burn-in; use more samples if you find that the parameter estimates are unreliable as indicated by the plots generated by hDDM
m.sample(2000, burn=20)
stats = m.gen_stats()
# inspect the model parameters by just printing them:
stats
# you can also investigate the posteriors (see http://ski.clps.brown.edu/hddm_docs/tutorial_python.html#loading-data for more info)
m.plot_posteriors()
plt.show()
# you can check whether the model converged as follows:
models = []
for i in range(5):
    m = hddm.HDDM(data)
    m.find_starting_values()
    m.sample(2000, burn=20)
    models.append(m)

hddm.analyze.gelman_rubin(models)
# to assess how well the model fits, you can plot the individual subject RT distributions in red on top of the predictive likelihood in blue:
m.plot_posterior_predictive(figsize=(14, 10))
plt.show()